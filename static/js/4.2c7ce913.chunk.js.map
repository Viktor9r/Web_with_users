{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/Dialogs-Container.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","src","name","Messages","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","onClick","reset","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageText","compose","dispatch","sendMessageCreator"],"mappings":"2NAKIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBChB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,SAAW,4B,oBCAvPD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,OAAS,2B,+GCaZC,EAVI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACI,qBAAKC,IAAK,qGACV,eAAC,IAAD,CAASZ,GAAIM,EAAb,UAAoBP,EAAMc,KAA1B,W,kBCEGC,EARE,SAACf,GACd,OACI,qBAAKS,UAAWC,IAAEC,OAAlB,SACKX,EAAMgB,W,gDCDbC,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAdQ,SAACnB,GACpB,OACI,uBAAMqB,SAAUrB,EAAMsB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAASV,GACpBH,KAAK,iBAAiBc,YAAY,yBAE7C,8BACI,wBAAQC,QAASC,IAAjB,0BCoBDC,EA1BC,SAAC/B,GACb,IAAIgC,EAAkBhC,EAAMiC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMN,GAAI4B,EAAE5B,QACrF6B,EAAmBrC,EAAMiC,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAUvB,QAASuB,EAAEvB,aAMhF,OAAKhB,EAAMN,OAEP,sBAAKe,UAAWC,IAAEwB,QAAlB,UACI,qBAAKzB,UAAWC,IAAE8B,aAAlB,SACKR,IAEL,sBAAKvB,UAAWC,IAAE4B,SAAlB,UACKD,EACD,cAAC,EAAD,CAAgBhB,SAZR,SAACoB,GACjBzC,EAAM0C,YAAYD,EAAOE,yBAGH,cAAC,IAAD,CAAU1C,GAAI,Y,yBCE7B2C,sBACXzC,aAfoB,SAACV,GACrB,MAAO,CACHwC,YAAaxC,EAAMwC,gBAIA,SAACY,GACxB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAOpC/C,IAFWgD,CAGbb","file":"static/js/4.2c7ce913.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Q_zk\",\"dialogsItems\":\"Dialogs_dialogsItems__26W9U\",\"active\":\"Dialogs_active__eK7B1\",\"dialog\":\"Dialogs_dialog__3xZ0a\",\"messages\":\"Dialogs_messages__3samT\",\"message\":\"Dialogs_message__1yDBs\",\"textarea\":\"Dialogs_textarea__2M1cY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__19bvP\",\"active\":\"DialogItem_active__1FckZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Messages_dialog__sGphN\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src={'https://static4.depositphotos.com/1007330/391/i/600/depositphotos_3919019-stock-photo-resort.jpg'}/>\r\n            <NavLink to={path}>{props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from './Messages.module.css';\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages","import {Field, reduxForm, reset} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../utilis/validator/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required,maxLength50]}\r\n                       name=\"newMessageText\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button onClick={reset}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {Navigate} from \"react-router-dom\";\r\n/*import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../validator/validator\";*/\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Messages message={m.message}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText)\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Dialogs","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}