{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPosts.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatuseWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/MyPost/ContainerMyPosts.jsx","components/Profile/Profile.jsx","components/Profile/Profile-Container.jsx","components/Profile/ProfileParams-Container.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","createField","Input","Textarea","type","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","savePhoto","saveProfile","Preloader","className","s","descriptionBlock","src","photos","large","userPhoto","mainphoto","target","files","length","initialValues","formatData","Post","item","message","Like","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","console","log","postsElements","posts","map","p","id","postsBlock","AddNewPostFormRedux","values","addPost","newPostText","Field","name","component","placeholder","validate","required","ContainerMyPosts","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","ProfileParamsContainer","useParams"],"mappings":"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","file":"static/js/3.9f36f22c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3MJ1Z\",\"mainphoto\":\"ProfileInfo_mainphoto__2lH1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3dBwq\",\"posts\":\"MyPosts_posts__1XWvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3tG6i\",\"Like\":\"Post_Like__2KmTs\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] )\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChanged = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <b>Status: </b><span onDoubleClick={activateEditMode} >{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChanged} autoFocus={true}\r\n                       onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) =>{\r\n    debugger\r\n    return (<form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n            {/*{error && <div className={style.form_summary_error}>\r\n                {error}\r\n            </div>}*/}\r\n            {/*<div>\r\n                <button>Login</button>\r\n            </div>*/}\r\n        </div>\r\n        <div><b>Name:</b>{createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n        <div><b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}</div>\r\n        <div><b>Looking for a job:</b>\r\n            {createField(\"\", \"lookingForAJob\", [], Input, {type:\"checkbox\"})}</div>\r\n        <div><b>My professional skiils</b>:\r\n            {createField(\"My professional skiils\", \"lookingForAJobDescription\", [], Textarea)}</div>\r\n    </form>)\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import s from './ProfileInfo.module.css'\r\nimport React, {useState} from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatuseWithHooks\";\r\nimport userPhoto from '../../../asseds/images/UserImage.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected =(e) => {\r\n        if(e.target.files.length){\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formatData) => {\r\n        saveProfile(formatData);\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainphoto}/>\r\n                </div>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData  goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) =>{\r\n    return (<div>\r\n        {isOwner &&\r\n        <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div><b>Name:</b> {profile.fullName}</div>\r\n        <div><b>About me:</b> {profile.aboutMe}</div>\r\n        <div><b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n        <div><b>Looking for a job description:</b> {profile.lookingForAJobDescription}</div>\r\n    </div>)\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={s.item}>\r\n                    <img src={'https://static4.depositphotos.com/1007330/391/i/600/depositphotos_3919019-stock-photo-resort.jpg'}/>\r\n                        {props.message}\r\n                </div>\r\n                <div className={s.Like}>\r\n                    <span>Like </span>\r\n                    {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n        ;\r\n}\r\nexport default Post;\r\n\r\n","import React, {Component} from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utilis/validator/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"Render\")\r\n    let postsElements =\r\n        [...props.posts]\r\n            .map(p => <Post  key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n});\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder=\"Post message\"\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add new post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;\r\n\r\n","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    debugger\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst ContainerMyPosts = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default ContainerMyPosts;\r\n\r\n","import s from './Profile.module.css'\r\nimport React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport ContainerMyPosts from \"./MyPost/ContainerMyPosts\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n            <ContainerMyPosts store = {props.store}  />\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.userId;\r\n        if (userId === \"0\") {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.userId != prevProps.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={this.props.userId === \"0\"}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                    saveProfile={this.props.saveProfile}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import ProfileContainer from \"./Profile-Container\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nlet ProfileParamsContainer = () => {\r\n    let {userId} = useParams();\r\n    return (\r\n        <ProfileContainer userId={userId}/>\r\n    )\r\n}\r\nexport default ProfileParamsContainer;"],"sourceRoot":""}